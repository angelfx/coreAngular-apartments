// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RealEstates.DAL.LocalDB;

namespace RealEstates.DAL.LocalDB.Migrations
{
    [DbContext(typeof(RealEstateContext))]
    [Migration("20190702015618_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RealEstates.Entities.Apartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BuildingId");

                    b.Property<float>("CommonArea");

                    b.Property<float>("Cost");

                    b.Property<int>("Floor");

                    b.Property<int>("IdApartment");

                    b.Property<float>("KitchenArea");

                    b.Property<int>("QuantitiesOfRooms");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("RealEstates.Entities.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuildingNumber");

                    b.Property<int?>("DistrictId");

                    b.Property<int>("IdBuilding");

                    b.Property<string>("NameRC");

                    b.Property<int>("QueueNumber");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("RealEstates.Entities.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdDistrict");

                    b.Property<int?>("RegionId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("RealEstates.Entities.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdRegion");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("RealEstates.Entities.Apartment", b =>
                {
                    b.HasOne("RealEstates.Entities.Building", "Building")
                        .WithMany("Apartments")
                        .HasForeignKey("BuildingId");
                });

            modelBuilder.Entity("RealEstates.Entities.Building", b =>
                {
                    b.HasOne("RealEstates.Entities.District", "District")
                        .WithMany("Buildings")
                        .HasForeignKey("DistrictId");
                });

            modelBuilder.Entity("RealEstates.Entities.District", b =>
                {
                    b.HasOne("RealEstates.Entities.Region", "Region")
                        .WithMany("Districts")
                        .HasForeignKey("RegionId");
                });
#pragma warning restore 612, 618
        }
    }
}
